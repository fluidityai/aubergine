---
import BaseLayout from "@/layouts/BaseLayout.astro";
import BlogPost from "@/components/BlogPost.astro";
import EntriesOne from "@/components/entries/EntriesOne.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const allPosts = await getCollection("posts");
  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.data.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
  <section class="relative overflow-hidden">
    <div
      class="absolute inset-x-0 top-0 h-96 rotate-180 text-gray-500/20 opacity-60 [mask-image:linear-gradient(to_bottom,transparent,white)]">
      <svg
        class="absolute inset-0 h-full w-full"
        xmlns="http://www.w3.org/2000/svg"
        ><defs
          ><pattern
            id="grid-pattern"
            width="32"
            height="32"
            patternUnits="userSpaceOnUse"
            x="50%"
            y="100%"
            patternTransform="translate(0 -1)"
            ><path d="M0 32V.5H32" fill="none" stroke="currentColor"
            ></path></pattern
          ></defs
        ><rect width="100%" height="100%" fill="url(#grid-pattern)"></rect></svg
      >
    </div>
    <div
      class="px-8 pt-32 pb-24 mx-auto md:px-12 lg:px-36 lg:pt-64 max-w-7xl relative">
      <div data-aos="fade-down" data-aos-duration="3000">
        <h1 class="text-4xl lg:text-5xl text-white font-display">
          Find here all our blog posts tagged with:<span
            class="md:block text-onyx-400">
            {tag}.</span
          >
        </h1>
      </div>

      <ul
        class="grid grid-cols-1 lg:grid-cols-3 sm:grid-cols-2 gap-4 mt-12 lg:mt-24">
        {
          posts.map((post) => (
            <EntriesOne
              url={"/posts/" + post.slug}
              title={post.data.title}
              description={post.data.description}
              alt={post.data.title}
              pubDate={post.data.pubDate.toString().slice(0, 10)}
              author={post.data.author}
              image={post.data.image.url}
            />
          ))
        }
      </ul>
    </div>
  </section>
</BaseLayout>
